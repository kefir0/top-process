<!DOCTYPE html>
<html>
<head>
    <title>
        TopProcessSvc Documentation
    </title>
    <style type="text/css">
        h2 {
            margin-top: 60px;
        }
        h3 {
            margin-top: 30px;
        }

        /* PrettyPrint styles from Chrome */
         div.header {    border-bottom: 2px solid black;    padding-bottom: 5px;    margin: 10px;}div.collapsible > div.hidden {    display:none;}.pretty-print {    margin-top: 1em;    margin-left: 20px;    font-family: monospace;    font-size: 13px;}#webkit-xml-viewer-source-xml {    display: none;}.collapsible-content {    margin-left: 1em;}.comment {    white-space: pre;}.button {    -webkit-user-select: none;    cursor: pointer;    display: inline-block;    margin-left: -10px;    width: 10px;    background-repeat: no-repeat;    background-position: left top;    vertical-align: bottom;}.collapse-button {    background-image: -webkit-canvas(arrowDown);    height: 10px;}.expand-button {    background-image: -webkit-canvas(arrowRight);    height: 11px;}
    </style>
</head>
<body>
    <h1>TopProcessSvc Documentation</h1>
    <p>
        <ul>
            <li><a href="#intro">Introduction</a></li>
            <li><a href="#demo">Demo</a></li>
            <li>
                <a href="#deploy">Deployment</a>
                <ul>
                    <li><a href="#deployServer">Server Deployment</a></li>
                    <li><a href="#deployClient">Client Deployment</a></li>
                </ul>
            </li>
            <li>            
                <a href="#consume">Consuming Service</a>
                <ul>
                    <li><a href="#consumeServerInfo">Consuming Server Info</a></li>
                    <li><a href="#consumeNotifications">Consuming Push Notifications</a></li>
                </ul>
            </li>
        </ul>
    </p>
    <p>
        <h2 id="intro">Introduction</h2>
        TopProcessSvc is a remote system monitoring service. It consists of two main entry points which can be used independently:
        <ul>
            <li><b>SystemInformation</b>, which provides list of running processes, CPU and memory load on demand</li>
            <li><b>NotificationHub</b>, which provides push notifications when certain system parameters exceed limits</li>
        </ul>
        Server part runs on .NET 4.5 & Microsoft ASP.NET 5. Push notifications are implemented with <a href="http://signalr.net/">SignalR</a> library, which supports multiple transports (WebSockets, ServerSentEvents, LongPolling) and has ready to use clients for various platforms (web, desktop and mobile).
    </p>
        
    <p>
        <h2 id="demo">Demo</h2>
        HTML/JS demo interface is included in TopProcessSvc\TopProcessSvc\WebInterface folder. <br />
        Live demo can be seen at <a href="http://5.19.249.13:567/TopProcessSvc/WebInterface/index.htm">http://5.19.249.13:567/TopProcessSvc/WebInterface/index.htm</a>
        <ul>
            <li>Click column headers to sort process list</li>
            <li>Click X button to the right of notification to dismiss it</li>
        </ul>

        <img src="screenshot.png" /> <br /><br />

        All modern browsers of latest version are supported, desktop and mobile (tested in latest IE, Chrome, Firefox, Chrome for Android, Android Browser).<br />
    </p>



    <p>
        <h2 id="deploy">Deployment</h2>
        Though demo client is by default included in the server folder and works from there as demonstrated in Live Demo, it can be deployed separately, or used locally by opening index.htm with a browser.
        
        <h3 id="deployServer">Server Deployment</h3>
        <b>System Requirements</b>
        <ul>
            <li>.NET 4.5</li>
            <li>IIS 8 (recommended). IIS 7 will work, but it does not support WebSockets for push notifications, so SignalR will fall back to another compatible transport.</li>
            <li>Visual Studio 2013</li>
            <li>Internet connection</li>
        </ul>
        <b>Deployment Steps</b>
        <ol>
            <li>
                Build Solution
                <ul>
                    <li>Start Visual Studio 2013 under administrator account (required for IIS interaction)</li>
                    <li>Open TopProcessSvc\TopProcessSvc.sln</li>
                    <li>Build solution. NuGet packages are not included with source code, they will be downloaded automatically</li>
                    <li>Open TopProcessSvc project properties. On Web tab, click Create Virtual Directory.</li>
                </ul>
            </li>
            <li>
                Configure IIS:
                <ul>
                    <li>Start IIS Manager (Win+R, inetmgr, enter)</li>
                    <li>Create new Integrated Application Pool with .NET 4.0</li>
                    <li>
                        Right-click your newly created pool, select Advanced Settings. Change <b>Process Model\Identity</b> option to <b>LocalSystem</b>
                        <br />
                        <i>Note: this is required to retrieve process information and performance counters. This increases security risk, since web service code will now run under elevated account.</i>
                    </li>
                    <li>Configure TopProcessSvc virtual directory (created by Visual Studio) to use newly created elevated application pool.</li>
                </ul>
            </li>
            <li>
                Check that deployment is successful:
                <ul>
                    <li>SystemInfo service should return list of running processes when opened in browser (in XML by default): <a href="http://localhost/TopProcessSvc/api/SystemInfo">http://localhost/TopProcessSvc/api/SystemInfo</a></li>
                    <li>SignalR returns auto-generated JS file: <a href="http://localhost/TopProcessSvc/signalr/hubs">http://localhost/TopProcessSvc/signalr/hubs</a></li>
                    <li>WebInterface works: <a href="http://localhost/TopProcessSvc/WebInterface/index.htm">http://localhost/TopProcessSvc/WebInterface/index.htm</a></li>
                </ul>
            </li>
        </ol>

        <h3 id="deployClient">Client Deployment</h3>
        <ul>
            <li>Copy all contents of TopProcessSvc\TopProcessSvc\WebInterface directory to the deployment location</li>
            <li>Point client to a server instance by modifying baseUrl variable at the top of scripts\controllers.js file</li>
        </ul>
        Now the client can be accessed by opening index.htm directly in browser, or via any kind of web server.
    </p>

    <p>
        <h2 id="consume">Consuming Service</h2>
        <p>
            <h3 id="consumeServerInfo">Consuming Server Info</h3>
            ServerInfo is just a HTTP web service that returns information in XML or JSON format, depending on Accept request header.
            <ul>
                <li>View in browser: <a href="http://localhost/TopProcessSvc/api/SystemInfo">http://localhost/TopProcessSvc/api/SystemInfo</a></li>
                <li>View with wget: "wget -qO- http://localhost/TopProcessSvc/api/SystemInfo" (JSON by default. Force XML: "wget --header "Accept: application/xml" -qO- http://localhost/TopProcessSvc/api/SystemInfo") </li>
                <li>In C#: new WebClient().DownloadString("http://localhost/TopProcessSvc/api/SystemInfo");</li>
            </ul>
            <b>Data Contract Explained</b>
            <ul>
                <li><b>CpuUsage</b>: Total CPU usage, from 0 to 1</li>
                <li><b>MemoryTotal</b>: Total physical memory, in KB</li>
                <li><b>MemoryUsed</b>: Used physical memoty, in KB</li>
                <li><b>ProcessInfo.Name</b>: Process name</li>
                <li><b>ProcessInfo.Id</b>: Process ID (PID)</li>
                <li><b>ProcessInfo.CpuUsage</b>: Process CPU usage, from 0 to 1</li>
                <li><b>ProcessInfo.TotalProcessorTime</b>: Total processor time of the process, in milliseconds</li>
                <li><b>ProcessInfo.WorkingSet</b>: Process woking set, in KB</li>
            </ul>
            <b>JSON output sample</b><br/>
            <pre>
 {
   "CpuUsage": 0.23149529,
   "MemoryTotal": 16758020,
   "MemoryUsed": 6937956,
   "Processes": [
      {
         "Name": "sqlservr",
         "Id": 1968,
         "CpuUsage": 0,
         "TotalProcessorTime": 6061937.5,
         "WorkingSet": 13984
      },
      {
         "Name": "svchost",
         "Id": 1148,
         "CpuUsage": 0,
         "TotalProcessorTime": 49125,
         "WorkingSet": 17780
      }
   ],
   "ServerName": "P-TUPITSYN"
}
            </pre>
            <b>XML output sample</b><br />
            <div xmlns="http://www.w3.org/1999/xhtml" class="pretty-print"><div class="collapsible" id="collapsible0"><div class="expanded"><div class="line"><span class="button collapse-button"></span><span class="html-tag">&lt;SystemInfo<span class="html-attribute"> <span class="html-attribute-name">xmlns:i</span>="<span class="html-attribute-value">http://www.w3.org/2001/XMLSchema-instance</span>"</span><span class="html-attribute"> <span class="html-attribute-name">xmlns</span>="<span class="html-attribute-value">http://schemas.datacontract.org/2004/07/TopProcessSvc.Models</span>"</span>&gt;</span></div><div class="collapsible-content"><span class="text"></span><div class="line"><span class="html-tag">&lt;CpuUsage&gt;</span><span class="text">0.0439922958612442</span><span class="html-tag">&lt;/CpuUsage&gt;</span></div><span class="text"></span><div class="line"><span class="html-tag">&lt;MemoryTotal&gt;</span><span class="text">16758020</span><span class="html-tag">&lt;/MemoryTotal&gt;</span></div><span class="text"></span><div class="line"><span class="html-tag">&lt;MemoryUsed&gt;</span><span class="text">7021268</span><span class="html-tag">&lt;/MemoryUsed&gt;</span></div><span class="text"></span><div class="collapsible" id="collapsible1"><div class="expanded"><div class="line"><span class="button collapse-button"></span><span class="html-tag">&lt;Processes&gt;</span></div><div class="collapsible-content"><span class="text"></span><div class="collapsible" id="collapsible2"><div class="expanded"><div class="line"><span class="button collapse-button"></span><span class="html-tag">&lt;ProcessInfo&gt;</span></div><div class="collapsible-content"><span class="text"></span><div class="line"><span class="html-tag">&lt;CpuUsage&gt;</span><span class="text">0</span><span class="html-tag">&lt;/CpuUsage&gt;</span></div><span class="text"></span><div class="line"><span class="html-tag">&lt;Id&gt;</span><span class="text">1968</span><span class="html-tag">&lt;/Id&gt;</span></div><span class="text"></span><div class="line"><span class="html-tag">&lt;Name&gt;</span><span class="text">sqlservr</span><span class="html-tag">&lt;/Name&gt;</span></div><span class="text"></span><div class="line"><span class="html-tag">&lt;TotalProcessorTime&gt;</span><span class="text">6067734.375</span><span class="html-tag">&lt;/TotalProcessorTime&gt;</span></div><span class="text"></span><div class="line"><span class="html-tag">&lt;WorkingSet&gt;</span><span class="text">13984</span><span class="html-tag">&lt;/WorkingSet&gt;</span></div><span class="text"></span></div><div class="line"><span class="html-tag">&lt;/ProcessInfo&gt;</span></div></div><div class="collapsed hidden"><div class="line"><span class="button expand-button"></span><span class="html-tag">&lt;ProcessInfo&gt;</span><span class="text">...</span><span class="html-tag">&lt;/ProcessInfo&gt;</span></div></div></div><span class="text"></span><div class="collapsible" id="collapsible3"><div class="expanded"><div class="line"><span class="button collapse-button"></span><span class="html-tag">&lt;ProcessInfo&gt;</span></div><div class="collapsible-content"><span class="text"></span><div class="line"><span class="html-tag">&lt;CpuUsage&gt;</span><span class="text">0</span><span class="html-tag">&lt;/CpuUsage&gt;</span></div><span class="text"></span><div class="line"><span class="html-tag">&lt;Id&gt;</span><span class="text">1148</span><span class="html-tag">&lt;/Id&gt;</span></div><span class="text"></span><div class="line"><span class="html-tag">&lt;Name&gt;</span><span class="text">svchost</span><span class="html-tag">&lt;/Name&gt;</span></div><span class="text"></span><div class="line"><span class="html-tag">&lt;TotalProcessorTime&gt;</span><span class="text">49203.125</span><span class="html-tag">&lt;/TotalProcessorTime&gt;</span></div><span class="text"></span><div class="line"><span class="html-tag">&lt;WorkingSet&gt;</span><span class="text">17828</span><span class="html-tag">&lt;/WorkingSet&gt;</span></div><span class="text"></span></div><div class="line"><span class="html-tag">&lt;/ProcessInfo&gt;</span></div></div><div class="collapsed hidden"><div class="line"><span class="button expand-button"></span><span class="html-tag">&lt;ProcessInfo&gt;</span><span class="text">...</span><span class="html-tag">&lt;/ProcessInfo&gt;</span></div></div></div><span class="text"></span></div><div class="line"><span class="html-tag">&lt;/Processes&gt;</span></div></div><div class="collapsed hidden"><div class="line"><span class="button expand-button"></span><span class="html-tag">&lt;Processes&gt;</span><span class="text">...</span><span class="html-tag">&lt;/Processes&gt;</span></div></div></div><span class="text"></span><div class="line"><span class="html-tag">&lt;ServerName&gt;</span><span class="text">P-TUPITSYN</span><span class="html-tag">&lt;/ServerName&gt;</span></div><span class="text"></span></div><div class="line"><span class="html-tag">&lt;/SystemInfo&gt;</span></div></div><div class="collapsed hidden"><div class="line"><span class="button expand-button"></span><span class="html-tag">&lt;SystemInfo<span class="html-attribute"> <span class="html-attribute-name">xmlns:i</span>="<span class="html-attribute-value">http://www.w3.org/2001/XMLSchema-instance</span>"</span><span class="html-attribute"> <span class="html-attribute-name">xmlns</span>="<span class="html-attribute-value">http://schemas.datacontract.org/2004/07/TopProcessSvc.Models</span>"</span>&gt;</span><span class="text">...</span><span class="html-tag">&lt;/SystemInfo&gt;</span></div></div></div></div>
        </p>
        <p>
            <h3 id="consumeNotifications">Consuming Push Notifications</h3>
            Push Notifications are implemented with <a href="http://www.asp.net/signalr">SignalR</a>. Browser (Javascript/HTML) and .NET (Windows Desktop, Windows Store, Windows Mobile, iOS/Android with Xamarin) clients are supported out of the box, please refer to documentation: <a href="http://www.asp.net/signalr">http://www.asp.net/signalr</a>.
            <ul>
                <li>SignalR hub name: <b>notificationHub</b></li>
                <li>SignalR method: <b>broadcastMessage(message)</b></li>
            </ul>
            
            <h4>SignalR protocol explained: Push Notifications on unsupported platforms</h4>
            Consuming SignalR push notifications on other platforms requires establishing and maintaining connection manually according to protocol.<br/>
            Below is a language-neutral explanation of SignalR protocol, demonstrated on ServerSentEvents transport. Please refer to documentation and source code for additional details: <a href="https://github.com/SignalR/SignalR">https://github.com/SignalR/SignalR</a>.<br />
            Let's say that service is located at <a href="http://localhost/TopProcessSvc">http://localhost/TopProcessSvc</a>:
            <ol>
                <li>
                    <b>Negotiation</b> phase serves two main purposes: identify a suitable transport, and establish a connection token to identify client. We are going to ignore protocol negotiation and use ServerSentEvents, so we only care about token.<br/>
                    GET <a href="#">http://localhost/TopProcessSvc/signalr/negotiate?clientProtocol=1.5</a> <br/>
                    <textarea rows="4" cols="150">{"Url":"/TopProcessSvc/signalr","ConnectionToken":"TOKEN","ConnectionId":"354be231-8b9e-44e0-bd72-093189e6b533","KeepAliveTimeout":20.0,"DisconnectTimeout":30.0,"ConnectionTimeout":110.0,"TryWebSockets":true,"ProtocolVersion":"1.5","TransportConnectTimeout":5.0,"LongPollDelay":0.0}</textarea>
                    <br /><br />
                </li>
                <li>
                    <b>Connection</b> phase establishes a push message stream, using ConnectionToken from previous step, and a hub name (see above) <br/>
                    GET <a href="#">http://localhost/TopProcessSvc/signalr/connect?transport=serverSentEvents&clientProtocol=1.5&connectionToken=TOKEN&connectionData=[{"name":"notificationhub"}]</a> <br/>
                    Server keeps this connection open and writes push message data as soon as it is available. Client reads data from this stream. Data format is as follows: <br/>
                    <textarea rows="4" cols="150">data: {"C":"d-DC1DD41-B,8|E,0|F,1","M":[{"H":"NotificationHub","M":"broadcastMessage","A":["Memory usage exceeds limit. 6798144 KB used of 16758020 KB total. 40% usage exceeds 20% limit."]}]}</textarea>
                    <br /><br />
                </li>
                <li>
                    <b>Start</b> should be called to initiate message push: <br/>
                    GET <a href="#">http://localhost/TopProcessSvc/signalr/start?transport=serverSentEvents&clientProtocol=1.5&connectionToken=TOKEN&connectionData=[{"name":"notificationhub"}]</a>
                    <br />
                </li>
            </ol>

<!-- 
    https://github.com/SignalR/SignalR/blob/master/src/Microsoft.AspNet.SignalR.Client.Store/Transports/WebSocketTransport.cs
    http://blogs.microsoft.co.il/ranw/2013/02/17/signalr-protocol/
    See fiddler
    -->
        </p>
    </p>
</body>
</html>